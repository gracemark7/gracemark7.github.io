(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{232:function(n,s,e){"use strict";e.r(s);var t=e(0),a=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"content"},[n._m(0),n._v(" "),n._m(1),n._v(" "),n._m(2),n._v(" "),e("p",[n._v("1、形成一个全新的、私有的上下文 EC\n2、当前私有的上下文中，有一个存放本上下文内声明的变量的地方 AO 私有变量对象--\x3e这里的变量都是当前上下文内的私有变量[当前上下文中声明的变量、形参变量]\n3、进栈执行\n4、代码进栈执行还要处理很多事情：\n1）、初始化作用域链[scope-chain]：<当前自己的上下文、上级上下文（创建函数时形成的作用域）>-当前函数的上级上下文是创建函数所在的上下文（作用域）\n作用域链查找机制：变量--私有变量--上级上下文的私有变量--EC(G) 2)、初始化 this 3)、初始化 arguments 4)、形参赋值：形参都是私有变量（放到 AO 中），如果不传递实参，默认是 undefined 5)、变量提升\n5、代码自上向下执行\n6、一般情况下，函数执行上下文，进栈执行后，会默认出栈释放掉[私有上下文中存储的私有变量和一些值都会被释放]\n目的：为了优化内存空间，减少内存消耗，提高页面或计算机处理速度")]),n._v(" "),n._m(3),n._v(" "),n._m(4),n._v(" "),e("p",[n._v("作业 3：")]),n._v(" "),n._m(5),e("p",[n._v("作业 4：")]),n._v(" "),n._m(6),n._m(7),n._v(" "),n._m(8),n._v(" "),e("p",[n._v("声明 var a")]),n._v(" "),e("p",[n._v("定义是赋值 a = 10")]),n._v(" "),e("p",[n._v("会把当前上下文中带有 VAR/FUNCTION 关键字的进行提前的声明或者定义")]),n._v(" "),e("p",[n._v("全局上下文中的变量提升\nEC(G)只有 VAR/FUNCTION 会变量提升(ES6 中 LET 和 CONST 不会)")]),n._v(" "),n._m(9),n._m(10),n._m(11),n._m(12),n._v(" "),n._m(13),n._m(14),n._v(" "),n._m(15),n._v(" "),n._m(16),n._m(17),n._v(" "),e("p",[n._v("JS 中 THIS 的五种情况梳理事件绑定函数执行（包括")]),n._v(" "),e("p",[n._v("自执行函数）")]),n._v(" "),e("p",[n._v("new 构造函数")]),n._v(" "),e("p",[n._v("箭头函数")]),n._v(" "),e("p",[n._v("call/apply/bind")]),n._v(" "),e("p",[n._v("截图++++++")]),n._v(" "),n._m(18),e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence#table",target:"_blank",rel:"noopener noreferrer"}},[n._v("运算符优先级"),e("OutboundLink")],1)]),n._v(" "),e("p",[n._v("成员访问 20")]),n._v(" "),n._m(19),n._v(" "),e("p",[n._v("创建函数：和创建变量区别不大，->【函数名其实就是变量】")]),n._v(" "),e("p",[n._v("1、单独开辟一个堆内存【16 进制地址】，函数的堆内存中存放的是函数体中的“代码字符串”")]),n._v(" "),e("p",[n._v("2、创建函数的时候，就声明了作用域（scope），也就是所在的上下文环境")]),n._v(" "),e("p",[n._v("3、把 16 进制的地址存放到栈中，共变量（函数名等）关联引用即可")]),n._v(" "),e("p",[n._v("执行函数：")]),n._v(" "),e("p",[n._v("执行函数目的：")]),n._v(" "),n._m(20),n._m(21),n._v(" "),e("p",[n._v("相同点：都是在自身基础上累加 1\n不同点：计算和累加的顺序\n++i ：自身先累加 1，根据累加后的结果进行运算\ni++：先根据原始值进行运算，运算完成后再累加 1")]),n._v(" "),e("p",[n._v("(5 + i++); // 5+(i++) 都是一样的效果 -> 5+i=6  i++:i=2")]),n._v(" "),e("p",[n._v("i++和++i 一定是数学运算「“+N”也是把 N 变为数字类型的值」")]),n._v(" "),n._m(22),n._v(" "),e("p",[n._v("形成的私有上下文不被释放，此时不仅保护私有变量，而且变量和存储的值也不会被释放，保存起来了。\n保护、保存这两种机制，可以实现高阶编程技巧。")]),n._v(" "),n._m(23),n._m(24),n._v(" "),n._m(25),n._m(26),n._v(" "),n._m(27),e("p",[n._v("专题练习：")]),n._v(" "),e("p",[n._v("1、手写防抖函数\n函数防抖（debounce）和节流（throttle），在高频触发场景下需要防抖和节流。")]),n._v(" "),e("p",[n._v("频繁的事件触发：")]),n._v(" "),e("p",[n._v("window 的 resize、scroll")]),n._v(" "),e("p",[n._v("mousedown、mousemove")]),n._v(" "),e("p",[n._v("keyup、keydown ......")]),n._v(" "),e("p",[n._v("防抖：触发事件后 n 秒后才执行，如果在 n 妙内又触发了事件，则会重新计算函数执行事件。")]),n._v(" "),n._m(28),e("p",[n._v("2、手写节流函数")]),n._v(" "),e("p",[n._v("原理：如果持续触发事件，每隔一段时间，只执行一次。")]),n._v(" "),e("p",[n._v("根据首次是否执行以及结束后是否执行，效果有所不同，实现方式也有所不同。")]),n._v(" "),e("p",[n._v("leading：代表首次是否执行")]),n._v(" "),e("p",[n._v("trailing：结束后是否再执行一次")]),n._v(" "),e("p",[n._v("关于节流的实现，有两种主流的实现方式，一种是使用时间戳，一种是设置定时器。")]),n._v(" "),n._m(29),n._m(30),n._m(31),n._m(32),n._m(33),n._v(" "),n._m(34),n._v(" "),n._m(35),n._v(" "),e("p",[n._v("每一种数据类型都有一个自己所属的内置类：Number 数字类(每一个数字/NaN/Infinity 都是它的实例)、String、Boolean、Symbol、BigInt、Array、RegExp、Date、Function、Object...")]),n._v(" "),n._m(36),n._v(" "),n._m(37),n._v(" "),e("p",[n._v("学习数组，首先分析一个数组（实例），研究清楚这个实例的特征后（含：结构特点和常用方法等），我们再遇到其他的数组，直接也是按照相同的机制进行处理的")]),n._v(" "),n._m(38),n._v(" "),e("p",[n._v("创建一个函数 fn")]),n._v(" "),e("p",[n._v("fn() 普通函数执行「堆栈机制」")]),n._v(" "),e("p",[n._v("new fn() 构造函数执行 「堆栈机制 + 面向对象机制」")]),n._v(" "),n._m(39),e("p",[n._v("检测某个成员（属性/键）是否属于这个对象，或者是否属于这个对象的私有属性")]),n._v(" "),e("p",[n._v("in:检测成员是否属于这个对象「特点：不论是私有属性，还是公有的属性，只要有则检测结果就是 true」")]),n._v(" "),e("p",[n._v("hasOwnProperty:用来检测当前成员是否为对象的私有属性「特点：只有是私有属性，结果才是 ture，哪怕有这个属性，但是属于公有的属性，结果也是 false」")]),n._v(" "),e("p",[n._v("** for in 遍历的时候**\n      无法遍历 Symobol 的私有属性\n      但是可以遍历到自己扩展的公共属性「内置的公共属性是不可枚举的（就是无法遍历到的）」\n      优先遍历数字属性，而且按照从小到大（不会严格按照属性书写的顺序）")]),n._v(" "),e("p",[n._v("很多对“对象”的操作是无法拿到 Symbol 属性的")]),n._v(" "),n._m(40),e("p",[n._v("/* // 解决：能够避免遍历公共的")]),n._v(" "),n._m(41),e("p",[n._v("解决：只想遍历私有的，包含 Symbol 的\nObject.keys:获取一个对象非 Symbol 的私有属性（结果是一个数组，数组中包含获取的属性）  \n类似的还有：Object.getOwnPropertyNames\nObject.getOwnPropertySymbols:只获取 Symbol 的私有属性（结果也是一个数组）")]),n._v(" "),n._m(42),n._v(" "),e("p",[n._v("相同：")]),n._v(" "),e("p",[n._v("一样把函数执行（传递参数也是一样）")]),n._v(" "),e("p",[n._v("形成私有上下文[按照步骤逐一处理")]),n._v(" "),e("p",[n._v("也存在私有变量")]),n._v(" "),e("p",[n._v("...")]),n._v(" "),e("p",[n._v("不同：")]),n._v(" "),e("p",[n._v("new 执行，浏览器会在当前上下文中，默认创建一个对象（实例对象）")]),n._v(" "),e("p",[n._v("在初始化 this 的时候，会让 this 指向这个实例对象")]),n._v(" "),e("p",[n._v("代码编写中，this.xxx = xxx 的操作，都是在给实例对象设置私有属性")]),n._v(" "),e("p",[n._v("除这些操作，其他的操作和实例对象没有直接关系")]),n._v(" "),e("p",[n._v("函数如果没有返回值，或者返回的是基本类型值，则默认返回创建的实例对象；如果自己返回的是应用类型值，以自己的返回为主。")]),n._v(" "),e("p",[n._v("构造函数执行：函数成为类，返回结果是类的一个实例。")]),n._v(" "),n._m(43),n._v(" "),e("p",[n._v("JS 中面向对象的底层处理机制：")]),n._v(" "),e("p",[n._v("1、每一个函数数据类型（除箭头函数），都天生自带一个属性：prototype 原型属性，属性值是一个对象（Function.prototype 除外），并且原型对象中自带一个属性：constructore，属性值是当前构造函数本身。\n普通函数、箭头函数、生成器函数")]),n._v(" "),e("p",[n._v("构造函数[自定义类]")]),n._v(" "),e("p",[n._v("内置类[内置构造函数]...")]),n._v(" "),e("p",[n._v("prototype 针对类有用，对于普通函数没啥用")]),n._v(" "),n._m(44),n._v(" "),n._m(45),n._v(" "),e("p",[n._v("普通函数、数组对象、正则对象、日期对象...")]),n._v(" "),e("p",[n._v("prototype 原型对象")]),n._v(" "),e("p",[n._v("实例对象")]),n._v(" "),e("p",[n._v("函数也是对象")]),n._v(" "),e("p",[n._v("所有对象都是 Object 内置类的一个实例")]),n._v(" "),n._m(46),n._v(" "),n._m(47),n._v(" "),n._m(48),n._v(" "),e("p",[n._v("为什么是 null？")]),n._v(" "),n._m(49),n._v(" "),e("p",[n._v("3、原型重定向的处理")]),n._v(" "),e("p",[n._v("构造函数的‘原型重定向’")]),n._v(" "),e("p",[n._v("优势：")]),n._v(" "),e("p",[n._v("1、把原型上其实例提供的公共属性和方法，全部写在一起了，提高整体性后者模块性")]),n._v(" "),e("p",[n._v("2、向其原型上扩展方法会容易些")]),n._v(" "),e("p",[n._v("弊端：")]),n._v(" "),e("p",[n._v("1、重定向后的原型对象中，缺失了 constructor 属性\n解决：\nfun.prototype = {\n手动设置 constructor:fun ，保证结构完整性\n}")]),n._v(" "),e("p",[n._v("2、 如果原始内置的原型对象中具备了一些属性和方法，此时重定向之后，之前设置的公共属性方法就丢失了")]),n._v(" "),e("p",[n._v("解决：")]),n._v(" "),e("p",[n._v("fun.prototype = Object.assign(fun.prototype,{...})")]),n._v(" "),e("p",[n._v("这种合并的办法，Fn.prototype 还是之前的堆地址，只不过是把新对象中的内容全部扩展到了原始的堆中 */")]),n._v(" "),n._m(50),n._v(" "),e("p",[n._v("Object.assign(obj1, obj2)); //->浅比较：obj2.n 直接覆盖 obj1.n")]),n._v(" "),e("p",[n._v("Fn.prototype = Object.assign({}, Fn.prototype, proto); //->这样合并，最后返回的是一个全新的对象，由于内置的 Fn.prototype 中的 constructor 是内置的不可枚举的属性，所以合并后也是无法赋给新对象的 */")]),n._v(" "),n._m(51),n._m(52),n._v(" "),e("p",[n._v("Array String Number Symbol RegExp Date ...")]),n._v(" "),e("p",[n._v("Element Node EventTarget Nodelist HTMLCollection")]),n._v(" "),e("p",[n._v("/*\n * 向内置类的原型扩展方法\n *   + 内置类的原型上提供了很多内置方法，但是这些方法不一定完全满足业务需求，此时需要我们自己扩展一些方法\n *  「优势」\n *   + 调用起来方便\n *   + 可以实现链式写法\n *   + 限定调取方法的类型，必须是指定类的实例\n *   + 扩展的方法，各个模块「其他成员」都可以直接的调用\n *   + ...\n *  「弊端」\n *   + 自己扩展的方法，容易覆盖内置的方法 （解决：自己设定的方法名要设置前缀 myUnique）\n *     Array.prototype={...} 这样操作是无效的，也怕你一行代码，把数组方法全干没了\n *   + 基于 for in 遍历的时候，会把自己扩展到原型上的方法也遍历到\n *   + ...\n */")]),n._v(" "),n._m(53),n._v(" "),e("p",[n._v("通过它的原型链一层层找，最后能找到 Object.prototype 的")]),n._v(" "),e("p",[n._v("所以所有的对象，都可以调取 Obeject.prototype 上的方法")]),n._v(" "),e("p",[n._v("“链式写法”：执行完成一个方法，返回的结果是某个实例，则可以继续调用这个实例所属类原型上的方法...")]),n._v(" "),n._m(54),n._m(55),n._v(" "),n._m(56),n._v(" "),n._m(57),e("p",[n._v("二、函数多种角色")]),n._v(" "),e("p",[n._v("函数的多种角色：\n函数:（第一角色：函数 一等公民）\n普通函数--\x3e作用域\n构造函数[类] --\x3e 原型和原型链\n对象：--\x3e键值对\n三种角色之间没有必然联系")]),n._v(" "),e("p",[n._v("所有的函数都(普通函数、自定义函数、内置构造函数)是 Function 内置类的实例")]),n._v(" "),n._m(58),e("p",[n._v("Function.prototype:类型是一个 empty/anonymous\n匿名空函数（）")]),n._v(" "),e("p",[n._v("三、this 的处理和应用（5 中情况梳理）")]),n._v(" "),e("p",[n._v("事件绑定")]),n._v(" "),e("p",[n._v("函数执行（包括自执行函数）")]),n._v(" "),e("p",[n._v("new 构造函数")]),n._v(" "),e("p",[n._v("箭头函数：没有 this，用到的 this 都是所处上下文中的 this")]),n._v(" "),e("p",[n._v("call/apply/bind")]),n._v(" "),e("p",[n._v("Function.prototype call applay bind 都是用来改变 this 指向，以后函数执行调用这三个方法就可以实现 this 的改变")]),n._v(" "),e("p",[n._v("==CALL/APPLY== 都是立即执行函数，并且改变函数中的 THIS，再并且给函数传递参数信息")]),n._v(" "),e("p",[n._v("==BIND== 并不会把函数立即执行，它是预先处理函数中的 THIS 和参数的")]),n._v(" "),n._m(59),n._v(" "),n._m(60),n._m(61),e("p",[n._v("绝对相等：左右两边类型和值都相等")]),n._v(" "),e("p",[n._v("相等：左右两边类型不同，会默认先转换为形同类型再去比较")]),n._v(" "),e("p",[n._v("对象==字符串：对象转字符串    \n *    null==undefined：相等，但是和其它值都不等\n *    NaN==NaN：false NaN 和谁都不相等\n *     剩余的都是转换为数字")]),n._v(" "),e("p",[n._v("对象->数字/字符串\n *    + 先调取这个属性 Symbol.toPrimitive\n *    + 没有这个属性，再去调用 valueOf 获取原始值「基本类型值」\n *    + 没有原始值，再去调用 toString 变为字符串\n *    + 如果最后是转换为数字，再去调用 Number，把字符串转换为数字")]),n._v(" "),n._m(62),n._m(63),e("p",[n._v("使用正则")]),n._v(" "),n._m(64),n._m(65),n._v(" "),n._m(66),n._v(" "),n._m(67),n._m(68),n._m(69),n._v(" "),e("p",[n._v("“Ajax 串行”\n传统实现异步操作，并且是串行的模式下，基本都是回调函数嵌套回调函数“回调地狱”问题。")]),n._v(" "),e("p",[n._v("异步：上面的事情没有完成，也不会等，下面的事情继续处理")]),n._v(" "),e("p",[n._v("同步：上面事情没处理完之前，下面事情是无法去处理的")]),n._v(" "),e("p",[n._v("需要优秀的代码管理模式，能够有效的管理异步编程中的代码，通过这种代码管理思想，让代码开发起来更便捷，维护起来更方便，可读性更强。JS 设计模式 Promise 设计模式就是异步编程")]),n._v(" "),n._m(70),n._v(" "),n._m(71),n._v(" "),e("p",[n._v("executor")]),n._v(" "),e("p",[n._v("PROMISE 状态")]),n._v(" "),e("p",[n._v("pending 初始状态")]),n._v(" "),e("p",[n._v("fulfilled/resolved 操作成功完成")]),n._v(" "),e("p",[n._v("rejected 操作失败")]),n._v(" "),n._m(72),n._v(" "),e("p",[n._v("then(func1,func2) / then(func)")]),n._v(" "),e("p",[n._v("catch(func)then 链机制")]),n._v(" "),n._m(73),n._v(" "),e("p",[n._v("Promise.all 取决于多个 promise 实例中是否出现有失败态的")]),n._v(" "),e("p",[n._v("Promise.race")]),n._v(" "),e("p",[n._v("Promise.reject")]),n._v(" "),e("p",[n._v("Promise.resolve 直接返回指定状态的 promise 实例")]),n._v(" "),n._m(74),e("p",[n._v("//new promise 的时候\n//立即执行传递的 executor 函数[同步]\n//在 executor 函数中一般用来管控一个异步的操作\n//而且传递给 executor 函数两个参数，resolve，reject，并且这两个参数都是函数\n//创造 Promise 类的一个实例：\n//[[PromiseState]]promise 状态：pending 准备状态 fulfilled/resolved 成功 兑现状态 rejected 失败(已拒绝)\n//[[PromiseResult]]promise 值：默认是 undefined，一般存储成功的结果或者失败的原因")]),n._v(" "),e("p",[n._v("ps：new Promise 创建实例，其状态和结果，取决于：executor 函数中的 resolve/reject 执行 & executor 函数执行是否报错")]),n._v(" "),e("p",[n._v(".then(onfulfilled,onrejected)\nonfulfilled,onrejected 返回的新实例，其成功或者失败\n.catch(onrejected) ==> .then(null,onrejected)如果某个参数不处理，会顺延到下一个.then 中指定状态要执行的方法")]),n._v(" "),e("p",[n._v("返回结果是一个全新的 Promise 实例，则这个实例的成功或失败等内容决定了 P2 的成功或者失败等内容")]),n._v(" "),n._m(75),n._v(" "),n._m(76),n._v(" "),e("p",[n._v("then(null,reason => {...}) 用 catch(reason=>{...})来代替")]),n._v(" "),e("p",[n._v(".then\n  当前实例状态已经是成功或者失败，此时创建一个异步微任务，等待同步业务结束，根据成功或者失败，来决定执行哪个方法\n如果此时的状态还是 pending，则直接把方法存储起来即可，没有创建异步的微任务\nresolve/reject 的时候，创建一个异步任务，等待同步结束后，根据状态执行基于.then 动态存储的函数")]),n._v(" "),e("p",[n._v("then(onfulfilled,onrejected):执行 then 方法只是把 onfulfilled,onrejected 函数保存起来[同步]，但是此时还没有执行，当 promise 状态变为成功或者失败的时候，才会去触发执行对应的函数【异步->微任务】")]),n._v(" "),e("p",[n._v("//同时处理多个 Promise 实例：\n//Promise.all 等待所有的 Promise 实例都成功，整体返回状态才是成功，只是有一个失败，整体状态就是失败 -- 都成功，result 是按照之前设定的顺序依次存储每一个 promise 的结果\n//只要在处理过程中有一个失败的，则立即结束处理，p 也是失败的，谁失败的，记录谁失败的原因\n//Promise.race 看多个实例谁先处理完，先处理完的状态[不论是失败还是成功]就是最后整体的状态\n//ajax 并行：同时发送多个异步的 ajax 请求（三者之间没有依赖关系），但是需要所有的异步请求都处理成功后，再去统一做什么事情")]),n._v(" "),n._m(77),n._v(" "),e("p",[n._v("async:修饰函数，最后默认让函数返回一个 promise 实例（函数执行报错，实例状态是失败，结果是报错原因；否则实例状态是成功，结果是 return 后的值）--一般都配合 await 的[函数中使用 await，则必须基于 asnc 修饰才可以")]),n._v(" "),e("p",[n._v("await “promise 实例”：如果设置的不是 promise 实例\n  + 正常的值  await 10 -> await Promise.resolve(10)\n  + 函数执行  await xxx() -> 首先立即执行 xxx 函数，接收它的返回值 -> await 返回值\n本身是异步微任务：把当前上下文中 await 下面要执行的代码整体存储到异步的微任务中，当 await 后面的 promise 实例状态为成功后，再去执行下面的代码(也就是那个异步的微任务)")]),n._v(" "),e("p",[n._v("对失败的 promise 实例没有做异常的处理，则控制台抛出异常信息「不会影响后续代码执行」")]),n._v(" "),e("p",[n._v("//    + promise.catch(reason=>{})\n//    + await 需要自己基于 try catch 做异常捕获")]),n._v(" "),e("p",[n._v("练习题：")]),n._v(" "),n._m(78),n._m(79),e("p",[n._v('首先在微任务中查找，如果有"可执行的”，一定先执行微任务，再去执行宏任务。')]),n._v(" "),e("p",[n._v("微任务执行顺序：")]),n._v(" "),e("p",[n._v("“可执行“才可以拿出来执行，如果多个可执行，谁先放置的 先执行谁")]),n._v(" "),e("p",[n._v("宏任务执行顺序：")]),n._v(" "),e("p",[n._v("可执行“才可以拿出来执行，如果多个可执行，看谁先到的[定时器]")]),n._v(" "),n._m(80),n._v(" "),e("p",[n._v("(JS 实现 Promise「遵循的是 Promise A Plus 规范）https://promisesaplus.com/]")])])}),[function(){var n=this.$createElement,s=this._self._c||n;return s("h4",{attrs:{id:"一、阶段一-js-核心运行机制及高阶编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、阶段一-js-核心运行机制及高阶编程"}},[this._v("#")]),this._v(" 一、阶段一 JS 核心运行机制及高阶编程")])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"_1、堆栈内存底层处理机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、堆栈内存底层处理机制"}},[this._v("#")]),this._v(" 1、堆栈内存底层处理机制")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("函数执行：")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("闭包")]),this._v("：函数执行形成私有上下文，此上下文中的私有变量，和上下文以外的变量互不干扰；也就是当前上下文把\n这些变量保护起来了，我们把函数这种保护机制称为闭包[闭包不是具体代码，而是一种机制]；\n上下文不被释放，保护了私有变量，变量和存储值不被释放，保存起来[保存]\n利用这两种机制可实现高阶编程技巧")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("不能出栈释放")]),this._v("：当前上下文中某些内容[一般指堆空间]被上下文以外的事务占用了，则无法释放\n假设一旦被释放，后期外部事务就无法找到对应的内容了")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('var a=1;\nvar obj ={\n   name:"tom"\n}\nfunction fn(){\n   var a2 = a;\n  //  console.log(obj2)\n   obj2 = obj;\n   a2 =a;\n   obj2.name ="jack";\n}\nfn();\nconsole.log(a);\nconsole.log(obj);\n\n//obj2不是私有的，向全局找，如果全局也没有\n    //  情况1：输出obj2  直接报错  Uncaught ReferenceError: obj2 is not defined\n    //  情况2：赋值操作  相当于给window设置一个obj2的属性，并且赋值  window.obj2=0x001\n    a2 = a; //私有a2=1\n    obj2.name = "jack"; //遇到obj2，但是发现全局没有这个变量，它会继续再看window下是否有这个属性，如果window下有这个属性，则获取属性值，如果window下也没有这个属性，则报错（未定义变量） ->把0x001中的name属性值改为\'jack\'\n\n\n// VO(G):全局变量对象「全局上下文中声明的变量」\n// GO「window」:全局对象 「浏览器默认开辟的一个堆内存，存储供JS调用的各种API的」\nconsole.log(a);//首先看VO(G)中是否有，如果没有，则再看GO中有没有，如果也没有，则报错：a is not defined\n\n// 在全局上下文中\nvar n = 10;\n//老版本机制：VO(G)中声明一个n的全局变量，赋值10；特殊：“全局上下文”中，“基于var/function声明”的变量，也相当于给GO新增私有属性；并且之间存在映射关系「一个修改，另外一个也跟着修改」；\n//新版本机制：“全局上下文”中，“基于var/function声明”的变量，直接都当做GO的属性存储起来；\n\n基于let/const声明的变量，只是给VO(G)中设置全局变量，和GO没有任何的关系；\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(" * EC(G)变量提升\n *   var a;\n *   fn=0x000; [[scope]]:EC(G)\n *!/\nvar a = 1;\nfunction fn(a) {\n    /!*\n     * EC(FN)\n     *   作用域链:<EC(FN),EC(G)>\n     *   形参赋值:a=1\n     *   变量提升:\n     *     var a; 「没用了：因为此时私有上下文中已经有a了，不会重复声明」\n     *     a=0x001; [[scope]]:EC(FN) 「不会重复声明，但是需要重新赋值」\n     *!/\n    console.log(a); //=>函数\n    var a = 2; //私有a重新赋值为2\n    function a() {}\n    console.log(a); //=>2\n}\nfn(a); //fn(1)\nconsole.log(a); //=>1\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[s("em",[this._v("a、变量提升")])])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[s("em",[this._v("当前上下文中")])]),this._v("（全局、私有、块级），js 代码自上而下执行之前，浏览器会提前处理一些事情（可以理解为词法解析的一个环节，词法解析一定发生在代码执行之前【编译阶段】）")])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("func=函数 函数在这个阶段赋值都做了\nfunc()\nfunction func(){}\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("var func = function （）{\n真实项目中建议用函数表达式创建函数，因为这样在变量提升阶段只会声明，不会赋值\n}\n\nfunc()\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br"),s("span",{staticClass:"line-number"},[this._v("5")]),s("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var func = function AAA(){\n把原本作为值的函数表达式匿名函数“具名化”,（虽然是具名化，这个名字不能在外面访问=》也就是不能在当前上下文中创建这个名字）\n当函数执行，在形成的私有上下文中，会把这个具名的名字作为私有上下文中的变量（值就是这个函数）来进行处理\nAAA --\x3e 当前函数\nAAA() 递归调用，一般递归是有结束条件\n}\nAAA()// AAA is not defined\nfunc（）\n\n\nsetTimeout（function func（）{\n   func（）\n}，1000）\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("基于'VAR 或者 FUNCTION 在全局上下文中声明的变量-全局变量，会映射到 GO 全局对象 window 上一份，作为他的属性；而且接下来是一个修改，另外一个也会跟着修改'")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('if(!("a" in window)){\n   var a = 1\n}\n\nconsole.log(a)// undefined\n')])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br"),s("span",{staticClass:"line-number"},[this._v("5")]),s("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("不论条件是否成立，都需要变量提升（条件中带 function 的新版本中浏览器中只会提前声明，不会再提前赋值了）")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[s("em",[this._v("b、this 的几种情况")])])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var x = 3,\n    obj = {x: 5};\nobj.fn = (function () {\n    this.x *= ++x;\n    return function (y) {\n        this.x *= (++x)+y; 14 * 13+4\n        console.log(x);\n    }\n})();\nvar fn = obj.fn;\nobj.fn(6);\nfn(4);\nconsole.log(obj.x, x);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("this: 函数的执行主体（不等价于执行上下文「作用域」） -> 谁把这个函数执行的\n *   人具备的方法：吃饭\n *   王光慧“童鞋”，早上去北京大饭店吃饭「鸡蛋灌饼，加 10 个鸡蛋」\n *     + 谁吃饭？ 王光慧「方法执行主体:this」\n *     + 在哪吃饭？北京饭店「方法执行作用域:scope」\n *\n * 想要分清楚函数执行的执行主体(this)，可以按照如下的规律来分析:\n *   + 事件绑定\n *     + 不论是 DOM0 还是 DOM2 级事件绑定，给元素 E 的某个事件行为绑定方法，当事件触发方法执行，方法中的 this 是当前元素 E 本身\n *     + 特殊情况：\n *\n *       + IE6~8 中基于 attachEvent 实现 DOM2 事件绑定，事件触发方法执行，方法中的 this 不在是元素本身，大部分情况都是 window\n *       + 如果基于 call/apply/bind 强制改变了函数中的 this，我们也是以强制改变的为主\n *   + 普通函数执行\n *     + 函数执行，看函数前面是否有“点”，有“点”，“点”前面是谁 this 就是谁，没有“点”this 是 window「JS 严格模式下是 undefined」\n *       fn() -> this:window/undefined\n *       obj.fn() -> this:obj\n *       xxx."),s("strong",[this._v("proto")]),this._v(".fn() -> this:xxx."),s("strong",[this._v("proto")]),this._v("\n *       ...\n *     + 自执行函数执行：其内的 this 一般都是 window/undefined\n *     + 回调函数中的 this 一般也是 window/undefined，除非做过特殊的处理\n *     + 括号表达中的 this 很变态\n *     + ...\n *   + 构造函数执行\n *   + 箭头函数执行\n *   + 基于 call/apply/bind 强制改变 this\n *\n * 在浏览器端运行 JS 代码，非函数中的 this 一般都是 window；研究 this 都是+\n * 研究函数中的 this；有一个特殊的，就是 ES6+中“块级上下文”中的 this，是其所在上下文中的 this「理解为：块级上下文是没有自己 this 的」；")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var foo = 1；\n\nfunction  bar(){\n    //var foo 变量提升\n    if(!foo){\n        var foo = 10;\n    }\n    console.log(foo)//10\n}\n\n\nvar foo = 1；\n\nfunction  bar(){\n    //var foo 变量提升\n    if(false){\n        var foo = 10;\n    }\n    console.log(foo)//undefined 找自己私有 变量提升\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"_2、函数底层处理机制（创建-执行）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、函数底层处理机制（创建-执行）"}},[this._v("#")]),this._v(" 2、函数底层处理机制（创建+执行）")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var x = [12, 23];\nfunction fn(y) {\ny[0] = 100;\ny = [100];\ny[1] = 200;\nconsole.log(y);\n}\nfn(x);\nconsole.log(x);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h6",{attrs:{id:"i-和-i-的区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-和-i-的区别？"}},[this._v("#")]),this._v(" ++i 和 i++ 的区别？")])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"闭包：函数执行形成一个私有上下文，此上下文中的私有变量，和上下文以外的变量互不干扰，也就是当前上下文把这些变量保护起来了，我们把函数的这种保护机制称为闭包。【闭包不是具体的代码，而是一种机制】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#闭包：函数执行形成一个私有上下文，此上下文中的私有变量，和上下文以外的变量互不干扰，也就是当前上下文把这些变量保护起来了，我们把函数的这种保护机制称为闭包。【闭包不是具体的代码，而是一种机制】"}},[this._v("#")]),this._v(" 闭包：函数执行形成一个私有上下文，此上下文中的私有变量，和上下文以外的变量互不干扰，也就是当前上下文把这些变量保护起来了，我们把函数的这种保护机制称为闭包。【闭包不是具体的代码，而是一种机制】")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("var x = 100;\nfunction fn(){\n   var x = 200;\n   return function (y) {\n       console.log(y+x++)\n   }\n}\nvar f = fn();\nf(10);\nf(20);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h6",{attrs:{id:"_3、闭包作用域练习题-1（浏览器垃圾回收机制）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、闭包作用域练习题-1（浏览器垃圾回收机制）"}},[this._v("#")]),this._v(" 3、闭包作用域练习题 1（浏览器垃圾回收机制）")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("let x = 5;\nfunction fn(x) {\n    return function(y) {\n    console.log(y + (++x));\n}\n}\nlet f = fn(6);\nf(7);\nfn(8)(9);\nf(10);\nconsole.log(x);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h6",{attrs:{id:"_4、闭包作用域练习题-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、闭包作用域练习题-2"}},[this._v("#")]),this._v(" 4、闭包作用域练习题 2")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("let a=0,\nb=0;\nfunction A(a){\n    A=function(b){\n    alert(a+b++);\n};\n    alert(a++);\n}\nA(1);\nA(2);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('function debounce(func,wait,immediate){\n\n\n if (typeof func !== "function") throw new TypeError("func must be an function!");\n    if (typeof wait === "undefined") wait = 500;\n\n\n    var timeout,result;\n    return function(){\n       var self = this;\n       var args = arguments;\n       if(timeout) clearTimeout(timeout);\n       if(immediate){\n           //如果已经执行过，不再执行\n           var callNow = !timeout;\n           timeout = setTimeout(function(){\n                timeout = null\n           },await)\n           if(callNow) result = func.apply(self,args)\n       }else{\n           timeout = setTimeout(function(){\n           result =  func.apply(self,args)\n       },wait);\n       }\n       return result;\n    }\n}\n\n\n注意四个问题：\n1、this指向\n2、event对象\n3、返回值\n4、判断是否是立刻执行\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//节流--使用时间戳\nfunction throttle(){\n    var self,args;\n    var previous = 0;\n    return function(){\n        var now = new Date()\n        self = this;\n        args = arguments;\n        if(now - previous > await){\n            func.apply(self,args)\n            previous = now;\n        }\n    }\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//节流--使用定时器\nfunction throttle(){\n    var timeout;\n    var previous = 0;\n    return function(){\n        context = this;\n        args = arguments;\n        if(!timeout){\n            timeout = setTimeout(function(){\n                timeout = null;\n                func.apply(context,args)\n            },await)\n        }\n    }\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// 第三版\nfunction throttle(func, wait) {\n    var timeout, context, args, result;\n    var previous = 0;\n\n    var later = function() {\n        previous = +new Date();\n        timeout = null;\n        func.apply(context, args)\n    };\n\n    var throttled = function() {\n        var now = +new Date();\n        //下次触发 func 剩余的时间\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n         // 如果没有剩余的时间了或者你改了系统时间\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        } else if (!timeout) {\n            timeout = setTimeout(later, remaining);\n        }\n    };\n    return throttled;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('function throttle(func, wait) {\n    if (typeof func !== "function") throw new TypeError("func must be an function!");\n    if (typeof wait === "undefined") wait = 500;\n    let timer = null,\n        previous = 0; //记录上一次操作的时间\n    return function proxy(...params) {\n        let self = this,\n            now = new Date(), //当前这次触发操作的时间\n            remaining = wait - (now - previous);\n        if (remaining <= 0) {\n            // 两次间隔时间超过wait了，直接执行即可\n            clearTimeout(timer);\n            timer = null;\n            previous = now;\n            func.call(self, ...params);\n        } else if (!timer) {\n            // 两次触发的间隔时间没有超过wait，则设置定时器，让其等待remaining这么久之后执行一次「前提：没有设置过定时器」\n            timer = setTimeout(function () {\n                clearTimeout(timer);\n                timer = null;\n                previous = new Date();\n                func.call(self, ...params);\n            }, remaining);\n        }\n    };\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h4",{attrs:{id:"第二座大山：面向对象程序设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二座大山：面向对象程序设计"}},[this._v("#")]),this._v(" 第二座大山：面向对象程序设计")])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"_1、对象思想开发出来的编程语言，所以我们学习和开发-js-的时候，也要按照面向对象的思想去处理！！"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、对象思想开发出来的编程语言，所以我们学习和开发-js-的时候，也要按照面向对象的思想去处理！！"}},[this._v("#")]),this._v(" 1、对象思想开发出来的编程语言，所以我们学习和开发 JS 的时候，也要按照面向对象的思想去处理！！")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("内置类：")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("ul",[s("li",[this._v("每一种 DOM 元素也都有自己所属的类：\nwindow -> Window -> WindowProperties -> EventTarget -> Object\ndocument -> HTMLDocument -> Document -> Node -> EventTarget -> Object\ndiv -> HTMLDivElement -> HTMLElement -> Element -> Node -> ...")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("ul",[s("li",[this._v("HTMLCollection / NodeList / CSSStyleDeclaration /  DOMTokenList ...")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("自定义类")]),this._v("：")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function Fn() {\n    /*\n     * EC(FN)\n     *   初始创建Fn找个类的一个实例对象  0x000\n     *   初始THIS:this->0x000\n     */\n    let total = 0; //上下文的私有变量  和实例对象没有必然的联系\n    this.x = 10; //this.xxx=xxx 都是给实例对象设置的私有属性和方法\n    this.y = 20;\n    this.say = function () { //0x000.say=0x100   0x001.say=0x101\n        console.log('SAY');\n    };\n    /* 如果不设置返回值，或者返回值是一个基本类型值，默认都会把实例对象 0x000 返回；如果手动返回的是一个引用数据类型值，则以自己返回的为主； */\n    // return {\n    //     name: 'zhufeng'\n    // };\n}\nlet f1 = new Fn(); //->0x000\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(" for (let key in obj) {\n    console.log(key); //->‘name’ ‘AAA’  \n    // for in遍历的时候\n    //  + 无法遍历Symobol的私有属性\n    //  + 但是可以遍历到自己扩展的公共属性「内置的公共属性是不可枚举的（就是无法遍历到的）」\n    //  + 优先遍历数字属性，而且按照从小到大（不会严格按照属性书写的顺序）\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("for (let key in obj) {\n    if (!obj.hasOwnProperty(key)) break;\n    //已经遍历到公共的，则私有已经遍历完，结束循环\n    console.log(key); //->'name'\n}\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br"),s("span",{staticClass:"line-number"},[this._v("5")]),s("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"_2、new-fn-构造函数执行与-fn-普通函数执行异同："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、new-fn-构造函数执行与-fn-普通函数执行异同："}},[this._v("#")]),this._v(" 2、new fn() 构造函数执行与 fn() 普通函数执行异同：")])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"_3、面向对象基础「搞定原型和原型链」"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、面向对象基础「搞定原型和原型链」"}},[this._v("#")]),this._v(" 3、面向对象基础「搞定原型和原型链」-")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("存储供当前类所属实例调用的公共属性和方法")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("2、每一个对象类型值，都天生自带一个属性："),s("strong",[this._v("proto")]),this._v("原型链属性（隐式原型），属性值指向所属类的原型对象 prototype")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("...\n"),s("strong",[this._v("为了找到所属类原型上的公共方法")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("原型链")]),this._v("：首先找自己私有的属性，私有中存在的就是私有属性；私有中不存在，则默认基于"),s("strong",[this._v("proto")]),this._v("找所属类 prototype 上的，如果还没有，则基于 prototype 上的"),s("strong",[this._v("proto")]),this._v("继续向上查找...直到找到 Obeject.prototype 为止【我们把这个查找机制称为原型链】")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("proto")]),this._v(":null")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("Object.prototype 原型对象也是对象类的一个实例，"),s("strong",[this._v("proto")]),this._v("如果要指向就是指向自己，这样没有意义；所以作为基类上的"),s("strong",[this._v("proto")]),this._v("是 null 即可")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("Object.assign:合并两个对象「浅比较」")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/* let obj = {\n    fn1() {},\n    fn2: function fn2() {}\n    // 两者写法的区别：\n    //   + 第一种写法：obj.fn1函数是没有prototype属性的 「不能被作为构造函数」\n    //   + 第二种写法：和正常的函数没有区别\n};\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("内置原型扩展方法")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("所有对象都是 Object 的一个实例\n它的"),s("strong",[this._v("proto")]),this._v("直接指向 Object.prototype 纯粹的对象")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\n// Array.prototype.unique = function unique() {\n//     // this:一般都是当前要操作的实例(也就是要操作的数组)\n//     let obj = {},\n//         self = this;\n//     for (let i = 0; i < self.length; i++) {\n//         let item = self[i];\n//         if (obj.hasOwnProperty(item)) {\n//             // 数组之前出现过这一项，当前项就是重复的，我们此时删除当前项即可\n//             self.splice(i, 1);\n//             i--;\n//             continue;\n//         }\n//         obj[item] = item;\n//     }\n//     return self; //实现链式写法\n// };\n\n\n\narr.sort().reverse().push("zrb")\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"_4、面向对象进阶："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、面向对象进阶："}},[this._v("#")]),this._v(" 4、面向对象进阶：")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("一、"),s("strong",[this._v("new 执行的原理")]),this._v("\n1、创建实例对象\n2、会像普通函数一样，让其执行[THIS 指向实例对象]\n3、返回值没有或者是基本值，则返回的是实例对象（处理返回值）")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function _new(Ctor, ...params) {\n    // 1.创建一个实例对象「创建Ctor类的实例：实例.__proto__ -> 类.prototype」\n    /* let obj = {};\n    obj.__proto__ = Ctor.prototype; */\n    let obj = Object.create(Ctor.prototype);\n    // 2.把函数执行「THIS指向实例对象」  call->执行函数,改变函数中的THIS\n    let result = Ctor.call(obj, ...params);\n    // 3.处理返回值\n    if (result !== null && /^(object|function)$/.test(typeof result)) return result;\n    return obj;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("函数.__proto__ = Function.prototype\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h4",{attrs:{id:"面向对象作业题讲解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象作业题讲解"}},[this._v("#")]),this._v(" 面向对象作业题讲解")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("//ES6基于class创建类\nclass Model {\n    //给实例设置私有属性\n    //构造函数体\n    constructor(x,y){\n        this.x = x;\n        this.y = y;\n    }\n    // z = 100 // 相当于在构造函数体中this.z = 100\n    //构造函数原型上设置方法[实例的公共属性],设置方法可以，设置属性不可以\n    gexX(){\n        console.log(this.x);\n    }\n    getY(){\n        console.log(this.y);\n    }\n    //给构造函数设置静态属性方法[把它当做普通对象] Model.setNumber()\n    static n = 200\n    static setNumber(n){\n        this.n = n\n    }\n}\nModel.prototype.z = 100\nlet m = new Model()\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("var a = ?;\nif (a == 1 && a == 2 && a == 3) {\nconsole.log('OK');\n}\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\n// 方案1:数据类型转换\n\n/* var a = {\n   i: 0\n};\n// Symbol.toPrimitive/valueOf/toString...\na[Symbol.toPrimitive] = function () {\n   // this -> a\n   return ++this.i;\n};\nif (a == 1 && a == 2 && a == 3) {\n   console.log('OK');\n} */\n/* var a = [1, 2, 3];\na.toString = a.shift;\nif (a == 1 && a == 2 && a == 3) {\n   console.log('OK');\n}\n\n\n// 方案2：数据劫持\n//   + 在全局上下文中基于var/function声明变量，相当于给window设置对应的属性  -> window.a\n//   + Object.defineProperty劫持对象中某个属性的获取和设置等操作\nvar i = 0;\nObject.defineProperty(window, 'a', {\n   get() {\n       // 获取window.a的时候触发getter函数\n       return ++i;\n   },\n   // set(value) {\n   //     // 设置window.a属性值的时候触发setter函数\n   // }\n});\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('\n/*\n* 编写queryURLParams方法实现如下的效果（至少两种方案）\n*/\nlet url="http://www.zhufengpeixun.cn/?lx=1&from=wx#video";\nconsole.log(url.queryURLParams("from")); //=>"wx"\nconsole.log(url.queryURLParams("_HASH")); //=>"video"\n\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\n/* String.prototype.queryURLParams = function queryURLParams(key) {\n    // this->url  key->property\n    // 获取信息\n    var self = this,\n        link = document.createElement('a'),\n        hash = '',\n        search = '',\n        result = {};\n    link.href = self;\n    hash = link.hash;\n    search = link.search;\n    // 解析结果\n    if (hash) {\n        hash = hash.substring(1);\n        result['_HASH'] = hash;\n    }\n    if (search) {\n        search = search.substring(1);\n        search.split('&').forEach(function (item) {\n            item = item.split('=');\n            result[item[0]] = item[1];\n        });\n    }\n    // 返回信息\n    return typeof key === \"undefined\" ? result : result[key];\n}; */\n/* String.prototype.queryURLParams = function queryURLParams(key) {\n    var self = this,\n        result = {};\n    self.replace(/#([^?#=&]+)/g, function (_, $1) {\n        result['_HASH'] = $1;\n    });\n    self.replace(/([^?#=&]+)=([^?#=&]+)/g, function (_, $1, $2) {\n        result[$1] = $2;\n    });\n    return typeof key === \"undefined\" ? result : result[key];\n};\n\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"对象、数组克隆-浅克隆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象、数组克隆-浅克隆"}},[this._v("#")]),this._v(" 对象、数组克隆[浅克隆]")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("es6 循环遍历   内置方法\n浅克隆：只处理对象或数组的第一级内容，剩下的都是"),s("strong",[this._v("公用")]),this._v("的，这样克隆后的结果和之前还是有一定的关联\n深克隆：\nJSON.parse/stringify[变为字符串，再变为对象，这样所有的内存会重新开辟]；\n无法转为字符串，不是所有的值都支持：\n正则变为空对象\nBigInt 处理不了，会报错\n属性为 undefined 或者函数的都会消失\n日期对象变为字符串后转换不回来\nArrayBuffer...")])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("  /**\n     * 判断给定的对象是否是一个普通对象\n     * @method isObject\n     * @param { * } object 需要判断的对象\n     * @return { Boolean } 给定的对象是否是普通对象\n     */\n    utils.each(['String', 'Function', 'Array', 'Number', 'RegExp', 'Object', 'Date'], function (v) {\n        UE.utils['is' + v] = function (obj) {\n            return Object.prototype.toString.apply(obj) == '[object ' + v + ']';\n        }\n    });\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('function shallowClone(source,target){\n //数组或对象，基于循环的方案处理\n //处理判断数据类型\n  var tep;\n  target = target || {}\n  for(var i in source){\n    if(source.hasOwnProperty(i)){\n        tep = source[i];\n        if(typeof tep == "object"){\n            target[i] = Array.isArray(tep) ? [] : {};\n            shallowClone(source[i], target[i])\n        }else{\n            target[i] = tep;\n        }\n    }\n  }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("h4",{attrs:{id:"异步同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步同步"}},[this._v("#")]),this._v(" 异步同步")])},function(){var n=this.$createElement,s=this._self._c||n;return s("h5",{attrs:{id:"promise：es6-新增加的类，它是一种承诺模式，有效管控-js-中的异步编程，可以解决异步编程中产生的回调“地狱”；"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise：es6-新增加的类，它是一种承诺模式，有效管控-js-中的异步编程，可以解决异步编程中产生的回调“地狱”；"}},[this._v("#")]),this._v(" Promise：ES6 新增加的类，它是一种承诺模式，有效管控 JS 中的异步编程，可以解决异步编程中产生的回调“地狱”；")])},function(){var n=this.$createElement,s=this._self._c||n;return s("ul",[s("li",[this._v("PROMISE 的 executor 函数和状态")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("ul",[s("li",[this._v("PROMISE 中的 THEN 和 CATCH")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("ul",[s("li",[this._v("PROMISE 中其它常用方法")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('const myFirstPromise = new Promise((resolve, reject) => {\n  // ?做一些异步操作，最终会调用下面两者之一:\n  //\n  //   resolve(someValue); // fulfilled\n  // ?或\n  //   reject("failure reason"); // rejected\n\n  resolve执行：修改promise实例的态,fulfilled/resolved,\n  成功的结果就是传递的实参信息\n\n  reject执行：修改promise实例的状态rejected,失败的原因也是传递的实参信息\n\n//resolve("ok")\n//立即修改状态和值，通知基于then注入的方法，此时.thena还没执行，不知道通知谁来执行，先把通知执行操作保存起来，"通知对应注入这个方法执行"这个操作是异步，只是把它排列到等待任务队列中，当其他事情处理完，再次返回头，通知对应注入方法执行\n });\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("//"),s("strong",[this._v("proto")]),this._v("  ==> Promise.prototype:then/catch/finally")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[this._v("//真实项目中，在多个 then 链下，其余的 then 方法基本都存放的是成功处理的事情，最后一个 then 存放失败的 ，这样不论是第一次或者其中一次，导致 promise 实例状态是失败的，都会"),s("strong",[this._v("延顺")]),this._v("到最后一个失败的处理函数上进行处理...")])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("async await [ES7 增加]")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v(" let body = document.body;\nbody.addEventListener('click', function () {\n    Promise.resolve().then(() => {\n        console.log(1);\n    });\n    console.log(2);\n});\nbody.addEventListener('click', function () {\n    Promise.resolve().then(() => {\n        console.log(3);\n    });\n    console.log(4);\n});\n\n\n\nsetTimeout(() => { //宏任务1\n    console.log('a');\n});\nPromise.resolve().then(() => { //微任务1 「进入到微任务队列即执行」\n    console.log('b');\n}).then(() => { //微任务2 「微任务1执行完即可」\n    return Promise.resolve('c').then(data => { //微任务4 「进入到微任务队列立即执行」\n        setTimeout(() => { //宏任务2\n            console.log('d')\n        });\n        console.log('f');\n        return data;\n    });\n}).then(data => { //微任务3 「微任务2执行完，并且告知其promise实例是成功的才可以执行」\n    console.log(data);\n});\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br")])])},function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function func1() {\n    console.log('func1 start');\n    return new Promise(resolve => {\n        resolve('OK');\n    });\n}\nfunction func2() {\n    console.log('func2 start');\n    return new Promise(resolve => {\n        setTimeout(() => {//宏任务2\n            resolve('OK');\n        }, 10);\n    });\n}\nconsole.log(1);\nsetTimeout(async () => {//宏任务1\n    console.log(2);\n    await func1();\n    console.log(3);//微任务3\n   \n}, 20);\nfor (let i = 0; i < 90000000; i++) {} //循环大约要进行80MS左右\nconsole.log(4);\nfunc1().then(result => {//微任务1\n    console.log(5);\n});\nfunc2().then(result => {//微任务2\n    console.log(6);\n});\nsetTimeout(() => {//宏任务3\n    console.log(7);\n}, 0);\nconsole.log(8);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br")])])},function(){var n=this.$createElement,s=this._self._c||n;return s("p",[s("strong",[this._v("Promise A")])])}],!1,null,null,null);s.default=a.exports}}]);